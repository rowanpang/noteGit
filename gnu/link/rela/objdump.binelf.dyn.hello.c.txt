
binelf.dyn.hello.c:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 2f 00 00 	mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <printf@plt>:
  401030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 404018 <printf@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	pushq  $0x0
  40103b:	e9 e0 ff ff ff       	jmpq   401020 <.plt>

0000000000401040 <show_foo@plt>:
  401040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 404020 <show_foo>
  401046:	68 01 00 00 00       	pushq  $0x1
  40104b:	e9 d0 ff ff ff       	jmpq   401020 <.plt>

Disassembly of section .text:

0000000000401050 <_start>:
  401050:	f3 0f 1e fa          	endbr64 
  401054:	31 ed                	xor    %ebp,%ebp
  401056:	49 89 d1             	mov    %rdx,%r9
  401059:	5e                   	pop    %rsi
  40105a:	48 89 e2             	mov    %rsp,%rdx
  40105d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401061:	50                   	push   %rax
  401062:	54                   	push   %rsp
  401063:	49 c7 c0 90 12 40 00 	mov    $0x401290,%r8
  40106a:	48 c7 c1 20 12 40 00 	mov    $0x401220,%rcx
  401071:	48 c7 c7 60 11 40 00 	mov    $0x401160,%rdi
  401078:	ff 15 72 2f 00 00    	callq  *0x2f72(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40107e:	f4                   	hlt    

000000000040107f <.annobin_abi_note.c>:
  40107f:	90                   	nop

0000000000401080 <_dl_relocate_static_pie>:
  401080:	f3 0f 1e fa          	endbr64 
  401084:	c3                   	retq   

0000000000401085 <.annobin__dl_relocate_static_pie.end>:
  401085:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40108c:	00 00 00 
  40108f:	90                   	nop

0000000000401090 <deregister_tm_clones>:
  401090:	b8 08 41 40 00       	mov    $0x404108,%eax
  401095:	48 3d 08 41 40 00    	cmp    $0x404108,%rax
  40109b:	74 13                	je     4010b0 <deregister_tm_clones+0x20>
  40109d:	b8 00 00 00 00       	mov    $0x0,%eax
  4010a2:	48 85 c0             	test   %rax,%rax
  4010a5:	74 09                	je     4010b0 <deregister_tm_clones+0x20>
  4010a7:	bf 08 41 40 00       	mov    $0x404108,%edi
  4010ac:	ff e0                	jmpq   *%rax
  4010ae:	66 90                	xchg   %ax,%ax
  4010b0:	c3                   	retq   
  4010b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4010b8:	00 00 00 00 
  4010bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010c0 <register_tm_clones>:
  4010c0:	be 08 41 40 00       	mov    $0x404108,%esi
  4010c5:	48 81 ee 08 41 40 00 	sub    $0x404108,%rsi
  4010cc:	48 89 f0             	mov    %rsi,%rax
  4010cf:	48 c1 ee 3f          	shr    $0x3f,%rsi
  4010d3:	48 c1 f8 03          	sar    $0x3,%rax
  4010d7:	48 01 c6             	add    %rax,%rsi
  4010da:	48 d1 fe             	sar    %rsi
  4010dd:	74 11                	je     4010f0 <register_tm_clones+0x30>
  4010df:	b8 00 00 00 00       	mov    $0x0,%eax
  4010e4:	48 85 c0             	test   %rax,%rax
  4010e7:	74 07                	je     4010f0 <register_tm_clones+0x30>
  4010e9:	bf 08 41 40 00       	mov    $0x404108,%edi
  4010ee:	ff e0                	jmpq   *%rax
  4010f0:	c3                   	retq   
  4010f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4010f8:	00 00 00 00 
  4010fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401100 <__do_global_dtors_aux>:
  401100:	f3 0f 1e fa          	endbr64 
  401104:	80 3d b9 30 00 00 00 	cmpb   $0x0,0x30b9(%rip)        # 4041c4 <completed.0>
  40110b:	75 13                	jne    401120 <__do_global_dtors_aux+0x20>
  40110d:	55                   	push   %rbp
  40110e:	48 89 e5             	mov    %rsp,%rbp
  401111:	e8 7a ff ff ff       	callq  401090 <deregister_tm_clones>
  401116:	c6 05 a7 30 00 00 01 	movb   $0x1,0x30a7(%rip)        # 4041c4 <completed.0>
  40111d:	5d                   	pop    %rbp
  40111e:	c3                   	retq   
  40111f:	90                   	nop
  401120:	c3                   	retq   
  401121:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401128:	00 00 00 00 
  40112c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401130 <frame_dummy>:
  401130:	f3 0f 1e fa          	endbr64 
  401134:	eb 8a                	jmp    4010c0 <register_tm_clones>

0000000000401136 <show>:
static int hello_static = 10;
static int hello_static_uninit;
char msg_hello[128]="msg hello,Hello world";

void show(char* msg)
{
  401136:	55                   	push   %rbp
  401137:	48 89 e5             	mov    %rsp,%rbp
  40113a:	48 83 ec 10          	sub    $0x10,%rsp
  40113e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    printf("in func:%s,msg:%s\n",__FILE__,msg);
  401142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401146:	48 89 c2             	mov    %rax,%rdx
  401149:	be 10 20 40 00       	mov    $0x402010,%esi
  40114e:	bf 18 20 40 00       	mov    $0x402018,%edi
  401153:	b8 00 00 00 00       	mov    $0x0,%eax
  401158:	e8 d3 fe ff ff       	callq  401030 <printf@plt>
    return;
  40115d:	90                   	nop
}
  40115e:	c9                   	leaveq 
  40115f:	c3                   	retq   

0000000000401160 <main>:

int main(int argc, char** argv)
{
  401160:	55                   	push   %rbp
  401161:	48 89 e5             	mov    %rsp,%rbp
  401164:	48 83 ec 10          	sub    $0x10,%rsp
  401168:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40116b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    static int local_static = 10;
    static int local_static_uninit;

    printf("in func %s\n",__FILE__);
  40116f:	be 10 20 40 00       	mov    $0x402010,%esi
  401174:	bf 2b 20 40 00       	mov    $0x40202b,%edi
  401179:	b8 00 00 00 00       	mov    $0x0,%eax
  40117e:	e8 ad fe ff ff       	callq  401030 <printf@plt>

    printf("foo_msg:%s,\n",foo_msg);
  401183:	be 40 41 40 00       	mov    $0x404140,%esi
  401188:	bf 37 20 40 00       	mov    $0x402037,%edi
  40118d:	b8 00 00 00 00       	mov    $0x0,%eax
  401192:	e8 99 fe ff ff       	callq  401030 <printf@plt>
    printf("msg_hello:%s\n",msg_hello);
  401197:	be 80 40 40 00       	mov    $0x404080,%esi
  40119c:	bf 44 20 40 00       	mov    $0x402044,%edi
  4011a1:	b8 00 00 00 00       	mov    $0x0,%eax
  4011a6:	e8 85 fe ff ff       	callq  401030 <printf@plt>

    foo_init = 10;
  4011ab:	c7 05 6b 2f 00 00 0a 	movl   $0xa,0x2f6b(%rip)        # 404120 <foo_init>
  4011b2:	00 00 00 
    foo_uninit = 20;
  4011b5:	c7 05 01 30 00 00 14 	movl   $0x14,0x3001(%rip)        # 4041c0 <foo_uninit>
  4011bc:	00 00 00 

    hello_init = 40;
  4011bf:	c7 05 97 2e 00 00 28 	movl   $0x28,0x2e97(%rip)        # 404060 <hello_init>
  4011c6:	00 00 00 
    hello_uninit = 30;
  4011c9:	c7 05 f5 2f 00 00 1e 	movl   $0x1e,0x2ff5(%rip)        # 4041c8 <hello_uninit>
  4011d0:	00 00 00 

    hello_static = 20;
  4011d3:	c7 05 87 2e 00 00 14 	movl   $0x14,0x2e87(%rip)        # 404064 <hello_static>
  4011da:	00 00 00 
    hello_static_uninit = 20;
  4011dd:	c7 05 e5 2f 00 00 14 	movl   $0x14,0x2fe5(%rip)        # 4041cc <hello_static_uninit>
  4011e4:	00 00 00 
    local_static = 20;
  4011e7:	c7 05 0f 2f 00 00 14 	movl   $0x14,0x2f0f(%rip)        # 404100 <local_static.1>
  4011ee:	00 00 00 
    local_static_uninit = 20;
  4011f1:	c7 05 d5 2f 00 00 14 	movl   $0x14,0x2fd5(%rip)        # 4041d0 <local_static_uninit.0>
  4011f8:	00 00 00 

    show(foo_msg);
  4011fb:	bf 40 41 40 00       	mov    $0x404140,%edi
  401200:	e8 31 ff ff ff       	callq  401136 <show>
    show_foo(hello_init);
  401205:	8b 05 55 2e 00 00    	mov    0x2e55(%rip),%eax        # 404060 <hello_init>
  40120b:	89 c7                	mov    %eax,%edi
  40120d:	e8 2e fe ff ff       	callq  401040 <show_foo@plt>
    return 0;
  401212:	b8 00 00 00 00       	mov    $0x0,%eax
}
  401217:	c9                   	leaveq 
  401218:	c3                   	retq   
  401219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401220 <__libc_csu_init>:
  401220:	f3 0f 1e fa          	endbr64 
  401224:	41 57                	push   %r15
  401226:	4c 8d 3d c3 2b 00 00 	lea    0x2bc3(%rip),%r15        # 403df0 <__frame_dummy_init_array_entry>
  40122d:	41 56                	push   %r14
  40122f:	49 89 d6             	mov    %rdx,%r14
  401232:	41 55                	push   %r13
  401234:	49 89 f5             	mov    %rsi,%r13
  401237:	41 54                	push   %r12
  401239:	41 89 fc             	mov    %edi,%r12d
  40123c:	55                   	push   %rbp
  40123d:	48 8d 2d b4 2b 00 00 	lea    0x2bb4(%rip),%rbp        # 403df8 <__do_global_dtors_aux_fini_array_entry>
  401244:	53                   	push   %rbx
  401245:	4c 29 fd             	sub    %r15,%rbp
  401248:	48 83 ec 08          	sub    $0x8,%rsp
  40124c:	e8 af fd ff ff       	callq  401000 <_init>
  401251:	48 c1 fd 03          	sar    $0x3,%rbp
  401255:	74 1f                	je     401276 <__libc_csu_init+0x56>
  401257:	31 db                	xor    %ebx,%ebx
  401259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401260:	4c 89 f2             	mov    %r14,%rdx
  401263:	4c 89 ee             	mov    %r13,%rsi
  401266:	44 89 e7             	mov    %r12d,%edi
  401269:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  40126d:	48 83 c3 01          	add    $0x1,%rbx
  401271:	48 39 dd             	cmp    %rbx,%rbp
  401274:	75 ea                	jne    401260 <__libc_csu_init+0x40>
  401276:	48 83 c4 08          	add    $0x8,%rsp
  40127a:	5b                   	pop    %rbx
  40127b:	5d                   	pop    %rbp
  40127c:	41 5c                	pop    %r12
  40127e:	41 5d                	pop    %r13
  401280:	41 5e                	pop    %r14
  401282:	41 5f                	pop    %r15
  401284:	c3                   	retq   
  401285:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40128c:	00 00 00 00 

0000000000401290 <__libc_csu_fini>:
  401290:	f3 0f 1e fa          	endbr64 
  401294:	c3                   	retq   

Disassembly of section .fini:

0000000000401298 <_fini>:
  401298:	f3 0f 1e fa          	endbr64 
  40129c:	48 83 ec 08          	sub    $0x8,%rsp
  4012a0:	48 83 c4 08          	add    $0x8,%rsp
  4012a4:	c3                   	retq   
