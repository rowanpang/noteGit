
value:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <_init>:
  401000:	f3 0f 1e fa          	endbr64 
  401004:	48 83 ec 08          	sub    $0x8,%rsp
  401008:	48 8b 05 e9 2f 00 00 	mov    0x2fe9(%rip),%rax        # 403ff8 <__gmon_start__>
  40100f:	48 85 c0             	test   %rax,%rax
  401012:	74 02                	je     401016 <_init+0x16>
  401014:	ff d0                	callq  *%rax
  401016:	48 83 c4 08          	add    $0x8,%rsp
  40101a:	c3                   	retq   

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 404008 <_GLOBAL_OFFSET_TABLE_+0x8>
  401026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 404010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401030 <free@plt>:
  401030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 404018 <free@GLIBC_2.2.5>
  401036:	68 00 00 00 00       	pushq  $0x0
  40103b:	e9 e0 ff ff ff       	jmpq   401020 <.plt>

0000000000401040 <printf@plt>:
  401040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 404020 <printf@GLIBC_2.2.5>
  401046:	68 01 00 00 00       	pushq  $0x1
  40104b:	e9 d0 ff ff ff       	jmpq   401020 <.plt>

0000000000401050 <memset@plt>:
  401050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 404028 <memset@GLIBC_2.2.5>
  401056:	68 02 00 00 00       	pushq  $0x2
  40105b:	e9 c0 ff ff ff       	jmpq   401020 <.plt>

0000000000401060 <malloc@plt>:
  401060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 404030 <malloc@GLIBC_2.2.5>
  401066:	68 03 00 00 00       	pushq  $0x3
  40106b:	e9 b0 ff ff ff       	jmpq   401020 <.plt>

0000000000401070 <atoi@plt>:
  401070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 404038 <atoi@GLIBC_2.2.5>
  401076:	68 04 00 00 00       	pushq  $0x4
  40107b:	e9 a0 ff ff ff       	jmpq   401020 <.plt>

Disassembly of section .text:

0000000000401080 <_start>:
  401080:	f3 0f 1e fa          	endbr64 
  401084:	31 ed                	xor    %ebp,%ebp
  401086:	49 89 d1             	mov    %rdx,%r9
  401089:	5e                   	pop    %rsi
  40108a:	48 89 e2             	mov    %rsp,%rdx
  40108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  401091:	50                   	push   %rax
  401092:	54                   	push   %rsp
  401093:	49 c7 c0 90 12 40 00 	mov    $0x401290,%r8
  40109a:	48 c7 c1 20 12 40 00 	mov    $0x401220,%rcx
  4010a1:	48 c7 c7 66 11 40 00 	mov    $0x401166,%rdi
  4010a8:	ff 15 42 2f 00 00    	callq  *0x2f42(%rip)        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ae:	f4                   	hlt    

00000000004010af <.annobin_abi_note.c>:
  4010af:	90                   	nop

00000000004010b0 <_dl_relocate_static_pie>:
  4010b0:	f3 0f 1e fa          	endbr64 
  4010b4:	c3                   	retq   

00000000004010b5 <.annobin__dl_relocate_static_pie.end>:
  4010b5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4010bc:	00 00 00 
  4010bf:	90                   	nop

00000000004010c0 <deregister_tm_clones>:
  4010c0:	b8 48 40 40 00       	mov    $0x404048,%eax
  4010c5:	48 3d 48 40 40 00    	cmp    $0x404048,%rax
  4010cb:	74 13                	je     4010e0 <deregister_tm_clones+0x20>
  4010cd:	b8 00 00 00 00       	mov    $0x0,%eax
  4010d2:	48 85 c0             	test   %rax,%rax
  4010d5:	74 09                	je     4010e0 <deregister_tm_clones+0x20>
  4010d7:	bf 48 40 40 00       	mov    $0x404048,%edi
  4010dc:	ff e0                	jmpq   *%rax
  4010de:	66 90                	xchg   %ax,%ax
  4010e0:	c3                   	retq   
  4010e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4010e8:	00 00 00 00 
  4010ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004010f0 <register_tm_clones>:
  4010f0:	be 48 40 40 00       	mov    $0x404048,%esi
  4010f5:	48 81 ee 48 40 40 00 	sub    $0x404048,%rsi
  4010fc:	48 89 f0             	mov    %rsi,%rax
  4010ff:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401103:	48 c1 f8 03          	sar    $0x3,%rax
  401107:	48 01 c6             	add    %rax,%rsi
  40110a:	48 d1 fe             	sar    %rsi
  40110d:	74 11                	je     401120 <register_tm_clones+0x30>
  40110f:	b8 00 00 00 00       	mov    $0x0,%eax
  401114:	48 85 c0             	test   %rax,%rax
  401117:	74 07                	je     401120 <register_tm_clones+0x30>
  401119:	bf 48 40 40 00       	mov    $0x404048,%edi
  40111e:	ff e0                	jmpq   *%rax
  401120:	c3                   	retq   
  401121:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401128:	00 00 00 00 
  40112c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401130 <__do_global_dtors_aux>:
  401130:	f3 0f 1e fa          	endbr64 
  401134:	80 3d 09 2f 00 00 00 	cmpb   $0x0,0x2f09(%rip)        # 404044 <completed.0>
  40113b:	75 13                	jne    401150 <__do_global_dtors_aux+0x20>
  40113d:	55                   	push   %rbp
  40113e:	48 89 e5             	mov    %rsp,%rbp
  401141:	e8 7a ff ff ff       	callq  4010c0 <deregister_tm_clones>
  401146:	c6 05 f7 2e 00 00 01 	movb   $0x1,0x2ef7(%rip)        # 404044 <completed.0>
  40114d:	5d                   	pop    %rbp
  40114e:	c3                   	retq   
  40114f:	90                   	nop
  401150:	c3                   	retq   
  401151:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401158:	00 00 00 00 
  40115c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401160 <frame_dummy>:
  401160:	f3 0f 1e fa          	endbr64 
  401164:	eb 8a                	jmp    4010f0 <register_tm_clones>

0000000000401166 <main>:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc,char **argv)
{
  401166:	55                   	push   %rbp
  401167:	48 89 e5             	mov    %rsp,%rbp
  40116a:	48 83 ec 30          	sub    $0x30,%rsp
  40116e:	89 7d dc             	mov    %edi,-0x24(%rbp)
  401171:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    int a,b,c;
    char *dest,*src;

    b=a;
  401175:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401178:	89 45 f8             	mov    %eax,-0x8(%rbp)
    c=1;
  40117b:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    b=c;
  401182:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401185:	89 45 f8             	mov    %eax,-0x8(%rbp)

    b=atoi(argv[1]);
  401188:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40118c:	48 83 c0 08          	add    $0x8,%rax
  401190:	48 8b 00             	mov    (%rax),%rax
  401193:	48 89 c7             	mov    %rax,%rdi
  401196:	e8 d5 fe ff ff       	callq  401070 <atoi@plt>
  40119b:	89 45 f8             	mov    %eax,-0x8(%rbp)

    dest = malloc(128);
  40119e:	bf 80 00 00 00       	mov    $0x80,%edi
  4011a3:	e8 b8 fe ff ff       	callq  401060 <malloc@plt>
  4011a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    src = malloc(128);
  4011ac:	bf 80 00 00 00       	mov    $0x80,%edi
  4011b1:	e8 aa fe ff ff       	callq  401060 <malloc@plt>
  4011b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    memset(src,b,16);
  4011ba:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  4011bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4011c1:	ba 10 00 00 00       	mov    $0x10,%edx
  4011c6:	89 ce                	mov    %ecx,%esi
  4011c8:	48 89 c7             	mov    %rax,%rdi
  4011cb:	e8 80 fe ff ff       	callq  401050 <memset@plt>
  4011d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4011d4:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4011d8:	48 8b 00             	mov    (%rax),%rax
    memcpy(dest,src,16);
  4011db:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  4011df:	48 89 01             	mov    %rax,(%rcx)
  4011e2:	48 89 51 08          	mov    %rdx,0x8(%rcx)

    printf("dest[0]:%ld\n",dest[0]);
  4011e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4011ea:	0f b6 00             	movzbl (%rax),%eax
  4011ed:	0f be c0             	movsbl %al,%eax
  4011f0:	89 c6                	mov    %eax,%esi
  4011f2:	bf 10 20 40 00       	mov    $0x402010,%edi
  4011f7:	b8 00 00 00 00       	mov    $0x0,%eax
  4011fc:	e8 3f fe ff ff       	callq  401040 <printf@plt>

    free(dest);
  401201:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401205:	48 89 c7             	mov    %rax,%rdi
  401208:	e8 23 fe ff ff       	callq  401030 <free@plt>
    free(src);
  40120d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401211:	48 89 c7             	mov    %rax,%rdi
  401214:	e8 17 fe ff ff       	callq  401030 <free@plt>
  401219:	b8 00 00 00 00       	mov    $0x0,%eax
}
  40121e:	c9                   	leaveq 
  40121f:	c3                   	retq   

0000000000401220 <__libc_csu_init>:
  401220:	f3 0f 1e fa          	endbr64 
  401224:	41 57                	push   %r15
  401226:	4c 8d 3d e3 2b 00 00 	lea    0x2be3(%rip),%r15        # 403e10 <__frame_dummy_init_array_entry>
  40122d:	41 56                	push   %r14
  40122f:	49 89 d6             	mov    %rdx,%r14
  401232:	41 55                	push   %r13
  401234:	49 89 f5             	mov    %rsi,%r13
  401237:	41 54                	push   %r12
  401239:	41 89 fc             	mov    %edi,%r12d
  40123c:	55                   	push   %rbp
  40123d:	48 8d 2d d4 2b 00 00 	lea    0x2bd4(%rip),%rbp        # 403e18 <__do_global_dtors_aux_fini_array_entry>
  401244:	53                   	push   %rbx
  401245:	4c 29 fd             	sub    %r15,%rbp
  401248:	48 83 ec 08          	sub    $0x8,%rsp
  40124c:	e8 af fd ff ff       	callq  401000 <_init>
  401251:	48 c1 fd 03          	sar    $0x3,%rbp
  401255:	74 1f                	je     401276 <__libc_csu_init+0x56>
  401257:	31 db                	xor    %ebx,%ebx
  401259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401260:	4c 89 f2             	mov    %r14,%rdx
  401263:	4c 89 ee             	mov    %r13,%rsi
  401266:	44 89 e7             	mov    %r12d,%edi
  401269:	41 ff 14 df          	callq  *(%r15,%rbx,8)
  40126d:	48 83 c3 01          	add    $0x1,%rbx
  401271:	48 39 dd             	cmp    %rbx,%rbp
  401274:	75 ea                	jne    401260 <__libc_csu_init+0x40>
  401276:	48 83 c4 08          	add    $0x8,%rsp
  40127a:	5b                   	pop    %rbx
  40127b:	5d                   	pop    %rbp
  40127c:	41 5c                	pop    %r12
  40127e:	41 5d                	pop    %r13
  401280:	41 5e                	pop    %r14
  401282:	41 5f                	pop    %r15
  401284:	c3                   	retq   
  401285:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40128c:	00 00 00 00 

0000000000401290 <__libc_csu_fini>:
  401290:	f3 0f 1e fa          	endbr64 
  401294:	c3                   	retq   

Disassembly of section .fini:

0000000000401298 <_fini>:
  401298:	f3 0f 1e fa          	endbr64 
  40129c:	48 83 ec 08          	sub    $0x8,%rsp
  4012a0:	48 83 c4 08          	add    $0x8,%rsp
  4012a4:	c3                   	retq   
