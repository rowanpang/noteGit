
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004003c8 <_init>:
  4003c8:	48 83 ec 08          	sub    $0x8,%rsp
  4003cc:	48 8b 05 25 0c 20 00 	mov    0x200c25(%rip),%rax        # 600ff8 <__gmon_start__>
  4003d3:	48 85 c0             	test   %rax,%rax
  4003d6:	74 02                	je     4003da <_init+0x12>
  4003d8:	ff d0                	callq  *%rax
  4003da:	48 83 c4 08          	add    $0x8,%rsp
  4003de:	c3                   	retq   

Disassembly of section .plt:

00000000004003e0 <.plt>:
  4003e0:	ff 35 22 0c 20 00    	pushq  0x200c22(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003e6:	ff 25 24 0c 20 00    	jmpq   *0x200c24(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003f0 <random@plt>:
  4003f0:	ff 25 22 0c 20 00    	jmpq   *0x200c22(%rip)        # 601018 <random@GLIBC_2.2.5>
  4003f6:	68 00 00 00 00       	pushq  $0x0
  4003fb:	e9 e0 ff ff ff       	jmpq   4003e0 <.plt>

Disassembly of section .text:

0000000000400400 <_start>:
  400400:	31 ed                	xor    %ebp,%ebp
  400402:	49 89 d1             	mov    %rdx,%r9
  400405:	5e                   	pop    %rsi
  400406:	48 89 e2             	mov    %rsp,%rdx
  400409:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40040d:	50                   	push   %rax
  40040e:	54                   	push   %rsp
  40040f:	49 c7 c0 b0 05 40 00 	mov    $0x4005b0,%r8
  400416:	48 c7 c1 40 05 40 00 	mov    $0x400540,%rcx
  40041d:	48 c7 c7 02 05 40 00 	mov    $0x400502,%rdi
  400424:	ff 15 c6 0b 20 00    	callq  *0x200bc6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40042a:	f4                   	hlt    
  40042b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400430 <deregister_tm_clones>:
  400430:	55                   	push   %rbp
  400431:	b8 28 10 60 00       	mov    $0x601028,%eax
  400436:	48 3d 28 10 60 00    	cmp    $0x601028,%rax
  40043c:	48 89 e5             	mov    %rsp,%rbp
  40043f:	74 17                	je     400458 <deregister_tm_clones+0x28>
  400441:	b8 00 00 00 00       	mov    $0x0,%eax
  400446:	48 85 c0             	test   %rax,%rax
  400449:	74 0d                	je     400458 <deregister_tm_clones+0x28>
  40044b:	5d                   	pop    %rbp
  40044c:	bf 28 10 60 00       	mov    $0x601028,%edi
  400451:	ff e0                	jmpq   *%rax
  400453:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400458:	5d                   	pop    %rbp
  400459:	c3                   	retq   
  40045a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400460 <register_tm_clones>:
  400460:	be 28 10 60 00       	mov    $0x601028,%esi
  400465:	55                   	push   %rbp
  400466:	48 81 ee 28 10 60 00 	sub    $0x601028,%rsi
  40046d:	48 89 e5             	mov    %rsp,%rbp
  400470:	48 c1 fe 03          	sar    $0x3,%rsi
  400474:	48 89 f0             	mov    %rsi,%rax
  400477:	48 c1 e8 3f          	shr    $0x3f,%rax
  40047b:	48 01 c6             	add    %rax,%rsi
  40047e:	48 d1 fe             	sar    %rsi
  400481:	74 15                	je     400498 <register_tm_clones+0x38>
  400483:	b8 00 00 00 00       	mov    $0x0,%eax
  400488:	48 85 c0             	test   %rax,%rax
  40048b:	74 0b                	je     400498 <register_tm_clones+0x38>
  40048d:	5d                   	pop    %rbp
  40048e:	bf 28 10 60 00       	mov    $0x601028,%edi
  400493:	ff e0                	jmpq   *%rax
  400495:	0f 1f 00             	nopl   (%rax)
  400498:	5d                   	pop    %rbp
  400499:	c3                   	retq   
  40049a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004a0 <__do_global_dtors_aux>:
  4004a0:	80 3d 7d 0b 20 00 00 	cmpb   $0x0,0x200b7d(%rip)        # 601024 <_edata>
  4004a7:	75 17                	jne    4004c0 <__do_global_dtors_aux+0x20>
  4004a9:	55                   	push   %rbp
  4004aa:	48 89 e5             	mov    %rsp,%rbp
  4004ad:	e8 7e ff ff ff       	callq  400430 <deregister_tm_clones>
  4004b2:	c6 05 6b 0b 20 00 01 	movb   $0x1,0x200b6b(%rip)        # 601024 <_edata>
  4004b9:	5d                   	pop    %rbp
  4004ba:	c3                   	retq   
  4004bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004c0:	f3 c3                	repz retq 
  4004c2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004cd:	00 00 00 

00000000004004d0 <frame_dummy>:
  4004d0:	55                   	push   %rbp
  4004d1:	48 89 e5             	mov    %rsp,%rbp
  4004d4:	5d                   	pop    %rbp
  4004d5:	eb 89                	jmp    400460 <register_tm_clones>

00000000004004d7 <myadd>:
#include <stdio.h>
#include <stdlib.h>

int myadd(int a, int b)
{
  4004d7:	55                   	push   %rbp
  4004d8:	48 89 e5             	mov    %rsp,%rbp
  4004db:	48 83 ec 20          	sub    $0x20,%rsp
  4004df:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4004e2:	89 75 e8             	mov    %esi,-0x18(%rbp)
	int c;
	int d;

	c = random();
  4004e5:	e8 06 ff ff ff       	callq  4003f0 <random@plt>
  4004ea:	89 45 fc             	mov    %eax,-0x4(%rbp)

	d = a + b + c;
  4004ed:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4004f0:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4004f3:	01 c2                	add    %eax,%edx
  4004f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4004f8:	01 d0                	add    %edx,%eax
  4004fa:	89 45 f8             	mov    %eax,-0x8(%rbp)
	return d;
  4004fd:	8b 45 f8             	mov    -0x8(%rbp),%eax
}
  400500:	c9                   	leaveq 
  400501:	c3                   	retq   

0000000000400502 <main>:

int main()
{
  400502:	55                   	push   %rbp
  400503:	48 89 e5             	mov    %rsp,%rbp
  400506:	48 83 ec 10          	sub    $0x10,%rsp
  40050a:	e8 e1 fe ff ff       	callq  4003f0 <random@plt>
  40050f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400512:	e8 d9 fe ff ff       	callq  4003f0 <random@plt>
  400517:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40051a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40051d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  400520:	01 d0                	add    %edx,%eax
  400522:	89 45 f4             	mov    %eax,-0xc(%rbp)
  400525:	8b 55 f8             	mov    -0x8(%rbp),%edx
  400528:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40052b:	89 d6                	mov    %edx,%esi
  40052d:	89 c7                	mov    %eax,%edi
  40052f:	e8 a3 ff ff ff       	callq  4004d7 <myadd>
  400534:	89 45 f0             	mov    %eax,-0x10(%rbp)
  400537:	b8 00 00 00 00       	mov    $0x0,%eax
  40053c:	c9                   	leaveq 
  40053d:	c3                   	retq   
  40053e:	66 90                	xchg   %ax,%ax

0000000000400540 <__libc_csu_init>:
  400540:	41 57                	push   %r15
  400542:	41 56                	push   %r14
  400544:	49 89 d7             	mov    %rdx,%r15
  400547:	41 55                	push   %r13
  400549:	41 54                	push   %r12
  40054b:	4c 8d 25 be 08 20 00 	lea    0x2008be(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400552:	55                   	push   %rbp
  400553:	48 8d 2d be 08 20 00 	lea    0x2008be(%rip),%rbp        # 600e18 <__init_array_end>
  40055a:	53                   	push   %rbx
  40055b:	41 89 fd             	mov    %edi,%r13d
  40055e:	49 89 f6             	mov    %rsi,%r14
  400561:	4c 29 e5             	sub    %r12,%rbp
  400564:	48 83 ec 08          	sub    $0x8,%rsp
  400568:	48 c1 fd 03          	sar    $0x3,%rbp
  40056c:	e8 57 fe ff ff       	callq  4003c8 <_init>
  400571:	48 85 ed             	test   %rbp,%rbp
  400574:	74 20                	je     400596 <__libc_csu_init+0x56>
  400576:	31 db                	xor    %ebx,%ebx
  400578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40057f:	00 
  400580:	4c 89 fa             	mov    %r15,%rdx
  400583:	4c 89 f6             	mov    %r14,%rsi
  400586:	44 89 ef             	mov    %r13d,%edi
  400589:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40058d:	48 83 c3 01          	add    $0x1,%rbx
  400591:	48 39 dd             	cmp    %rbx,%rbp
  400594:	75 ea                	jne    400580 <__libc_csu_init+0x40>
  400596:	48 83 c4 08          	add    $0x8,%rsp
  40059a:	5b                   	pop    %rbx
  40059b:	5d                   	pop    %rbp
  40059c:	41 5c                	pop    %r12
  40059e:	41 5d                	pop    %r13
  4005a0:	41 5e                	pop    %r14
  4005a2:	41 5f                	pop    %r15
  4005a4:	c3                   	retq   
  4005a5:	90                   	nop
  4005a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ad:	00 00 00 

00000000004005b0 <__libc_csu_fini>:
  4005b0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005b4 <_fini>:
  4005b4:	48 83 ec 08          	sub    $0x8,%rsp
  4005b8:	48 83 c4 08          	add    $0x8,%rsp
  4005bc:	c3                   	retq   
