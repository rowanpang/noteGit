0,serach main

a.out:     file format elf64-powerpcle


Disassembly of section .init:

00000000100003e0 <00000024.plt_call.__gmon_start__>:
    100003e0:	18 00 41 f8 	std     r2,24(r1)
    100003e4:	20 81 82 e9 	ld      r12,-32480(r2)
    100003e8:	a6 03 89 7d 	mtctr   r12
    100003ec:	20 04 80 4e 	bctr

00000000100003f0 <_init>:
    100003f0:	02 10 40 3c 	lis     r2,4098
    100003f4:	00 7f 42 38 	addi    r2,r2,32512
    100003f8:	a6 02 08 7c 	mflr    r0
    100003fc:	10 00 01 f8 	std     r0,16(r1)
    10000400:	a1 ff 21 f8 	stdu    r1,-96(r1)
    10000404:	00 00 00 60 	nop
    10000408:	08 80 02 e8 	ld      r0,-32760(r2)
    1000040c:	00 00 a0 2f 	cmpdi   cr7,r0,0
    10000410:	0c 00 fe 41 	beq+    cr7,1000041c <_init+0x2c>
    10000414:	cd ff ff 4b 	bl      100003e0 <00000024.plt_call.__gmon_start__>
    10000418:	18 00 41 e8 	ld      r2,24(r1)
    1000041c:	60 00 21 38 	addi    r1,r1,96
    10000420:	10 00 01 e8 	ld      r0,16(r1)
    10000424:	a6 03 08 7c 	mtlr    r0
    10000428:	20 00 80 4e 	blr

Disassembly of section .text:

0000000010000440 <00000017.plt_call.random@@GLIBC_2.17>:
    10000440:	18 00 41 f8 	std     r2,24(r1)
    10000444:	18 81 82 e9 	ld      r12,-32488(r2)
    10000448:	a6 03 89 7d 	mtctr   r12
    1000044c:	20 04 80 4e 	bctr

0000000010000450 <00000017.plt_call.__libc_start_main@@GLIBC_2.17>:
    10000450:	18 00 41 f8 	std     r2,24(r1)
    10000454:	10 81 82 e9 	ld      r12,-32496(r2)
    10000458:	a6 03 89 7d 	mtctr   r12
    1000045c:	20 04 80 4e 	bctr

0000000010000460 <_start>:
    10000460:	02 10 40 3c 	lis     r2,4098
    10000464:	00 7f 42 38 	addi    r2,r2,32512
    10000468:	78 0b 29 7c 	mr      r9,r1
    1000046c:	e4 06 21 78 	rldicr  r1,r1,0,59
    10000470:	00 00 00 38 	li      r0,0
    10000474:	81 ff 21 f8 	stdu    r1,-128(r1)
    10000478:	a6 03 08 7c 	mtlr    r0
    1000047c:	00 00 01 f8 	std     r0,0(r1)
    10000480:	10 80 02 e9 	ld      r8,-32752(r2)
    10000484:	cc ff ff 4b 	b       10000450 <00000017.plt_call.__libc_start_main@@GLIBC_2.17>
    10000488:	00 00 00 60 	nop
	...
    10000494:	40 20 0c 00 	.long 0xc2040
    10000498:	2c 00 00 00 	.long 0x2c
    1000049c:	06 00 5f 73 	andi.   r31,r26,6
    100004a0:	74 61 72 74 	andis.  r18,r3,24948
    100004a4:	00 00 00 60 	nop
    100004a8:	00 00 00 60 	nop
    100004ac:	00 00 00 60 	nop

00000000100004b0 <deregister_tm_clones>:
    100004b0:	02 10 40 3c 	lis     r2,4098
    100004b4:	00 7f 42 38 	addi    r2,r2,32512
    100004b8:	a6 02 08 7c 	mflr    r0
    100004bc:	00 00 00 60 	nop
    100004c0:	00 00 00 60 	nop
    100004c4:	30 81 62 38 	addi    r3,r2,-32464
    100004c8:	37 81 22 39 	addi    r9,r2,-32457
    100004cc:	50 48 23 7d 	subf    r9,r3,r9
    100004d0:	0e 00 a9 2b 	cmpldi  cr7,r9,14
    100004d4:	10 00 01 f8 	std     r0,16(r1)
    100004d8:	e1 ff 21 f8 	stdu    r1,-32(r1)
    100004dc:	14 00 dd 41 	bgt-    cr7,100004f0 <deregister_tm_clones+0x40>
    100004e0:	20 00 21 38 	addi    r1,r1,32
    100004e4:	10 00 01 e8 	ld      r0,16(r1)
    100004e8:	a6 03 08 7c 	mtlr    r0
    100004ec:	20 00 80 4e 	blr
    100004f0:	00 00 00 60 	nop
    100004f4:	18 80 22 e9 	ld      r9,-32744(r2)
    100004f8:	00 00 a9 2f 	cmpdi   cr7,r9,0
    100004fc:	e4 ff 9e 41 	beq     cr7,100004e0 <deregister_tm_clones+0x30>
    10000500:	a6 03 29 7d 	mtctr   r9
    10000504:	18 00 41 f8 	std     r2,24(r1)
    10000508:	78 4b 2c 7d 	mr      r12,r9
    1000050c:	21 04 80 4e 	bctrl
    10000510:	18 00 41 e8 	ld      r2,24(r1)
    10000514:	cc ff ff 4b 	b       100004e0 <deregister_tm_clones+0x30>
    10000518:	00 00 00 60 	nop
    1000051c:	00 00 42 60 	ori     r2,r2,0

0000000010000520 <register_tm_clones>:
    10000520:	02 10 40 3c 	lis     r2,4098
    10000524:	00 7f 42 38 	addi    r2,r2,32512
    10000528:	a6 02 08 7c 	mflr    r0
    1000052c:	00 00 00 60 	nop
    10000530:	00 00 00 60 	nop
    10000534:	30 81 62 38 	addi    r3,r2,-32464
    10000538:	30 81 22 39 	addi    r9,r2,-32464
    1000053c:	50 48 23 7d 	subf    r9,r3,r9
    10000540:	74 1e 29 7d 	sradi   r9,r9,3
    10000544:	74 0e 24 7d 	sradi   r4,r9,1
    10000548:	95 01 84 7c 	addze.  r4,r4
    1000054c:	10 00 01 f8 	std     r0,16(r1)
    10000550:	e1 ff 21 f8 	stdu    r1,-32(r1)
    10000554:	14 00 c2 40 	bne-    10000568 <register_tm_clones+0x48>
    10000558:	20 00 21 38 	addi    r1,r1,32
    1000055c:	10 00 01 e8 	ld      r0,16(r1)
    10000560:	a6 03 08 7c 	mtlr    r0
    10000564:	20 00 80 4e 	blr
    10000568:	00 00 00 60 	nop
    1000056c:	20 80 22 e9 	ld      r9,-32736(r2)
    10000570:	00 00 a9 2f 	cmpdi   cr7,r9,0
    10000574:	e4 ff 9e 41 	beq     cr7,10000558 <register_tm_clones+0x38>
    10000578:	a6 03 29 7d 	mtctr   r9
    1000057c:	18 00 41 f8 	std     r2,24(r1)
    10000580:	78 4b 2c 7d 	mr      r12,r9
    10000584:	21 04 80 4e 	bctrl
    10000588:	18 00 41 e8 	ld      r2,24(r1)
    1000058c:	cc ff ff 4b 	b       10000558 <register_tm_clones+0x38>

0000000010000590 <__do_global_dtors_aux>:
    10000590:	02 10 40 3c 	lis     r2,4098
    10000594:	00 7f 42 38 	addi    r2,r2,32512
    10000598:	a6 02 08 7c 	mflr    r0
    1000059c:	00 00 00 60 	nop
    100005a0:	2c 81 22 89 	lbz     r9,-32468(r2)
    100005a4:	00 00 89 2f 	cmpwi   cr7,r9,0
    100005a8:	10 00 01 f8 	std     r0,16(r1)
    100005ac:	e1 ff 21 f8 	stdu    r1,-32(r1)
    100005b0:	14 00 de 40 	bne-    cr7,100005c4 <__do_global_dtors_aux+0x34>
    100005b4:	05 ff ff 4b 	bl      100004b8 <deregister_tm_clones+0x8>
    100005b8:	01 00 20 39 	li      r9,1
    100005bc:	00 00 00 60 	nop
    100005c0:	2c 81 22 99 	stb     r9,-32468(r2)
    100005c4:	20 00 21 38 	addi    r1,r1,32
    100005c8:	10 00 01 e8 	ld      r0,16(r1)
    100005cc:	a6 03 08 7c 	mtlr    r0
    100005d0:	20 00 80 4e 	blr
    100005d4:	00 00 00 60 	nop
    100005d8:	00 00 00 60 	nop
    100005dc:	00 00 42 60 	ori     r2,r2,0

00000000100005e0 <frame_dummy>:
    100005e0:	02 10 40 3c 	lis     r2,4098
    100005e4:	00 7f 42 38 	addi    r2,r2,32512
    100005e8:	a6 02 08 7c 	mflr    r0
    100005ec:	ff ff 22 3d 	addis   r9,r2,-1
    100005f0:	08 7e 29 e9 	ld      r9,32264(r9)
    100005f4:	00 00 a9 2f 	cmpdi   cr7,r9,0
    100005f8:	10 00 01 f8 	std     r0,16(r1)
    100005fc:	e1 ff 21 f8 	stdu    r1,-32(r1)
    10000600:	30 00 9e 41 	beq     cr7,10000630 <frame_dummy+0x50>
    10000604:	00 00 00 60 	nop
    10000608:	28 80 22 e9 	ld      r9,-32728(r2)
    1000060c:	00 00 a9 2f 	cmpdi   cr7,r9,0
    10000610:	20 00 9e 41 	beq     cr7,10000630 <frame_dummy+0x50>
    10000614:	a6 03 29 7d 	mtctr   r9
    10000618:	ff ff 62 3c 	addis   r3,r2,-1
    1000061c:	18 00 41 f8 	std     r2,24(r1)
    10000620:	08 7e 63 38 	addi    r3,r3,32264
    10000624:	78 4b 2c 7d 	mr      r12,r9
    10000628:	21 04 80 4e 	bctrl
    1000062c:	18 00 41 e8 	ld      r2,24(r1)
    10000630:	20 00 21 38 	addi    r1,r1,32
    10000634:	10 00 01 e8 	ld      r0,16(r1)
    10000638:	a6 03 08 7c 	mtlr    r0
    1000063c:	ec fe ff 4b 	b       10000528 <register_tm_clones+0x8>

0000000010000640 <myadd9>:
#include <stdio.h>
#include <stdlib.h>

int myadd9(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9)\
{
    10000640:	f8 ff e1 fb 	std     r31,-8(r1)
    10000644:	c1 ff 21 f8 	stdu    r1,-64(r1)
    10000648:	78 0b 3f 7c 	mr      r31,r1
    1000064c:	78 1b 6b 7c 	mr      r11,r3
    10000650:	78 23 83 7c 	mr      r3,r4
    10000654:	78 2b a4 7c 	mr      r4,r5
    10000658:	78 33 c5 7c 	mr      r5,r6
    1000065c:	78 3b e6 7c 	mr      r6,r7
    10000660:	78 43 07 7d 	mr      r7,r8
    10000664:	78 4b 28 7d 	mr      r8,r9
    10000668:	78 53 49 7d 	mr      r9,r10
    1000066c:	60 00 7f 91 	stw     r11,96(r31)
    10000670:	68 00 7f 90 	stw     r3,104(r31)
    10000674:	70 00 9f 90 	stw     r4,112(r31)
    10000678:	78 00 bf 90 	stw     r5,120(r31)
    1000067c:	80 00 df 90 	stw     r6,128(r31)
    10000680:	88 00 ff 90 	stw     r7,136(r31)
    10000684:	90 00 1f 91 	stw     r8,144(r31)
    10000688:	98 00 3f 91 	stw     r9,152(r31)
    int sum;
    sum = a1+a2+a3+a4+a5+a6+a7+a8+a9;
    1000068c:	60 00 5f 81 	lwz     r10,96(r31)
    10000690:	68 00 3f 81 	lwz     r9,104(r31)
    10000694:	14 4a 2a 7d 	add     r9,r10,r9
    10000698:	b4 07 29 7d 	extsw   r9,r9
    1000069c:	70 00 5f 81 	lwz     r10,112(r31)
    100006a0:	14 4a 2a 7d 	add     r9,r10,r9
    100006a4:	b4 07 29 7d 	extsw   r9,r9
    100006a8:	78 00 5f 81 	lwz     r10,120(r31)
    100006ac:	14 4a 2a 7d 	add     r9,r10,r9
    100006b0:	b4 07 29 7d 	extsw   r9,r9
    100006b4:	80 00 5f 81 	lwz     r10,128(r31)
    100006b8:	14 4a 2a 7d 	add     r9,r10,r9
    100006bc:	b4 07 29 7d 	extsw   r9,r9
    100006c0:	88 00 5f 81 	lwz     r10,136(r31)
    100006c4:	14 4a 2a 7d 	add     r9,r10,r9
    100006c8:	b4 07 29 7d 	extsw   r9,r9
    100006cc:	90 00 5f 81 	lwz     r10,144(r31)
    100006d0:	14 4a 2a 7d 	add     r9,r10,r9
    100006d4:	b4 07 29 7d 	extsw   r9,r9
    100006d8:	98 00 5f 81 	lwz     r10,152(r31)
    100006dc:	14 4a 2a 7d 	add     r9,r10,r9
    100006e0:	b4 07 29 7d 	extsw   r9,r9
    100006e4:	a0 00 5f 81 	lwz     r10,160(r31)
    100006e8:	14 4a 2a 7d 	add     r9,r10,r9
    100006ec:	20 00 3f 91 	stw     r9,32(r31)

    return sum;
    100006f0:	20 00 3f 81 	lwz     r9,32(r31)
    100006f4:	b4 07 29 7d 	extsw   r9,r9
}
    100006f8:	78 4b 23 7d 	mr      r3,r9
    100006fc:	40 00 3f 38 	addi    r1,r31,64
    10000700:	f8 ff e1 eb 	ld      r31,-8(r1)
    10000704:	20 00 80 4e 	blr
	...
    10000710:	80 01 00 01 	.long 0x1000180

0000000010000714 <myadd>:

int myadd(int a, int b)
{
    10000714:	02 10 40 3c 	lis     r2,4098
    10000718:	00 7f 42 38 	addi    r2,r2,32512
    1000071c:	a6 02 08 7c 	mflr    r0
    10000720:	10 00 01 f8 	std     r0,16(r1)
    10000724:	f8 ff e1 fb 	std     r31,-8(r1)
    10000728:	b1 ff 21 f8 	stdu    r1,-80(r1)
    1000072c:	78 0b 3f 7c 	mr      r31,r1
    10000730:	78 1b 6a 7c 	mr      r10,r3
    10000734:	78 23 89 7c 	mr      r9,r4
    10000738:	30 00 5f 91 	stw     r10,48(r31)
    1000073c:	34 00 3f 91 	stw     r9,52(r31)
    int c;
    int d;

    c = random();
    10000740:	01 fd ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    10000744:	18 00 41 e8 	ld      r2,24(r1)
    10000748:	78 1b 69 7c 	mr      r9,r3
    1000074c:	20 00 3f 91 	stw     r9,32(r31)

    d = a + b + c;
    10000750:	30 00 5f 81 	lwz     r10,48(r31)
    10000754:	34 00 3f 81 	lwz     r9,52(r31)
    10000758:	14 4a 2a 7d 	add     r9,r10,r9
    1000075c:	b4 07 29 7d 	extsw   r9,r9
    10000760:	20 00 5f 81 	lwz     r10,32(r31)
    10000764:	14 4a 2a 7d 	add     r9,r10,r9
    10000768:	24 00 3f 91 	stw     r9,36(r31)
    return d;
    1000076c:	24 00 3f 81 	lwz     r9,36(r31)
    10000770:	b4 07 29 7d 	extsw   r9,r9
}
    10000774:	78 4b 23 7d 	mr      r3,r9
    10000778:	50 00 3f 38 	addi    r1,r31,80
    1000077c:	10 00 01 e8 	ld      r0,16(r1)
    10000780:	a6 03 08 7c 	mtlr    r0
    10000784:	f8 ff e1 eb 	ld      r31,-8(r1)
    10000788:	20 00 80 4e 	blr
    1000078c:	00 00 00 00 	.long 0x0
    10000790:	00 00 00 01 	.long 0x1000000
    10000794:	80 01 00 01 	.long 0x1000180

0000000010000798 <main>:

int main()
{
    10000798:	02 10 40 3c 	lis     r2,4098
    1000079c:	00 7f 42 38 	addi    r2,r2,32512
    100007a0:	a6 02 08 7c 	mflr    r0 				#保存lr到r0
    100007a4:	10 00 01 f8 	std     r0,16(r1) 			#r0,lr入栈. 固定写法 
    100007a8:	f8 ff e1 fb 	std     r31,-8(r1) 			#此时r31语义为caller的stack frame,r31入栈,固定写法
    100007ac:	41 ff 21 f8 	stdu    r1,-192(r1) 			#r1入栈, -192(r1)计算出的EA addr 更新到r1中.
    100007b0:	78 0b 3f 7c 	mr      r31,r1 				#r1->r31,r31语义变为函数自身的stack frame.
    int a;
    int b;
    int aa1,aa2,aa3,aa4,aa5,aa6,aa7,aa8,aa9;
    int sum,sum1,sum2;

    a = random();
    100007b4:	8d fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    100007b8:	18 00 41 e8 	ld      r2,24(r1)
    100007bc:	78 1b 69 7c 	mr      r9,r3
    100007c0:	70 00 3f 91 	stw     r9,112(r31)
    b = random();
    100007c4:	7d fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    100007c8:	18 00 41 e8 	ld      r2,24(r1)
    100007cc:	78 1b 69 7c 	mr      r9,r3
    100007d0:	74 00 3f 91 	stw     r9,116(r31)
    sum = a + b;
    100007d4:	70 00 5f 81 	lwz     r10,112(r31)
    100007d8:	74 00 3f 81 	lwz     r9,116(r31)
    100007dc:	14 4a 2a 7d 	add     r9,r10,r9
    100007e0:	78 00 3f 91 	stw     r9,120(r31)
    sum1 = myadd(a,b);
    100007e4:	70 00 3f 81 	lwz     r9,112(r31)
    100007e8:	b4 07 2a 7d 	extsw   r10,r9
    100007ec:	74 00 3f 81 	lwz     r9,116(r31)
    100007f0:	b4 07 29 7d 	extsw   r9,r9
    100007f4:	78 53 43 7d 	mr      r3,r10
    100007f8:	78 4b 24 7d 	mr      r4,r9
    100007fc:	21 ff ff 4b 	bl      1000071c <myadd+0x8>
    10000800:	78 1b 69 7c 	mr      r9,r3
    10000804:	7c 00 3f 91 	stw     r9,124(r31)

    aa1 = random();
    10000808:	39 fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000080c:	18 00 41 e8 	ld      r2,24(r1)
    10000810:	78 1b 69 7c 	mr      r9,r3
    10000814:	80 00 3f 91 	stw     r9,128(r31)
    aa2 = random();
    10000818:	29 fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000081c:	18 00 41 e8 	ld      r2,24(r1)
    10000820:	78 1b 69 7c 	mr      r9,r3
    10000824:	84 00 3f 91 	stw     r9,132(r31)
    aa3 = random();
    10000828:	19 fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000082c:	18 00 41 e8 	ld      r2,24(r1)
    10000830:	78 1b 69 7c 	mr      r9,r3
    10000834:	88 00 3f 91 	stw     r9,136(r31)
    aa4 = random();
    10000838:	09 fc ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000083c:	18 00 41 e8 	ld      r2,24(r1)
    10000840:	78 1b 69 7c 	mr      r9,r3
    10000844:	8c 00 3f 91 	stw     r9,140(r31)
    aa5 = random();
    10000848:	f9 fb ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000084c:	18 00 41 e8 	ld      r2,24(r1)
    10000850:	78 1b 69 7c 	mr      r9,r3
    10000854:	90 00 3f 91 	stw     r9,144(r31)
    aa6 = random();
    10000858:	e9 fb ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000085c:	18 00 41 e8 	ld      r2,24(r1)
    10000860:	78 1b 69 7c 	mr      r9,r3
    10000864:	94 00 3f 91 	stw     r9,148(r31)
    aa7 = random();
    10000868:	d9 fb ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000086c:	18 00 41 e8 	ld      r2,24(r1)
    10000870:	78 1b 69 7c 	mr      r9,r3
    10000874:	98 00 3f 91 	stw     r9,152(r31)
    aa8 = random();
    10000878:	c9 fb ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000087c:	18 00 41 e8 	ld      r2,24(r1)
    10000880:	78 1b 69 7c 	mr      r9,r3
    10000884:	9c 00 3f 91 	stw     r9,156(r31)
    aa9 = random();
    10000888:	b9 fb ff 4b 	bl      10000440 <00000017.plt_call.random@@GLIBC_2.17>
    1000088c:	18 00 41 e8 	ld      r2,24(r1)
    10000890:	78 1b 69 7c 	mr      r9,r3
    10000894:	a0 00 3f 91 	stw     r9,160(r31)

    sum2 = myadd9(aa1,aa2,aa3,aa4,aa5,aa6,aa7,aa8,aa9);
    10000898:	80 00 3f 81 	lwz     r9,128(r31)
    1000089c:	b4 07 23 7d 	extsw   r3,r9
    100008a0:	84 00 3f 81 	lwz     r9,132(r31)
    100008a4:	b4 07 24 7d 	extsw   r4,r9
    100008a8:	88 00 3f 81 	lwz     r9,136(r31)
    100008ac:	b4 07 25 7d 	extsw   r5,r9
    100008b0:	8c 00 3f 81 	lwz     r9,140(r31)
    100008b4:	b4 07 26 7d 	extsw   r6,r9
    100008b8:	90 00 3f 81 	lwz     r9,144(r31)
    100008bc:	b4 07 27 7d 	extsw   r7,r9
    100008c0:	94 00 3f 81 	lwz     r9,148(r31)
    100008c4:	b4 07 28 7d 	extsw   r8,r9
    100008c8:	98 00 3f 81 	lwz     r9,152(r31)
    100008cc:	b4 07 29 7d 	extsw   r9,r9
    100008d0:	9c 00 5f 81 	lwz     r10,156(r31)
    100008d4:	b4 07 4a 7d 	extsw   r10,r10
    100008d8:	a0 00 7f 81 	lwz     r11,160(r31)
    100008dc:	a6 01 0b 7c 	mtfprwa f0,r11
    100008e0:	60 00 01 d8 	stfd    f0,96(r1)
    100008e4:	5d fd ff 4b 	bl      10000640 <myadd9>
    100008e8:	78 1b 69 7c 	mr      r9,r3
    100008ec:	a4 00 3f 91 	stw     r9,164(r31)

    return 0;
    100008f0:	00 00 20 39 	li      r9,0
}
    100008f4:	78 4b 23 7d 	mr      r3,r9 			#retrun 0,从r3寄存器返回
    100008f8:	c0 00 3f 38 	addi    r1,r31,192 		#函数之初r1-192,这里r31+192恢复至r1.即得到caller的stack frame.
								#r31会被callee函数入栈保存,blr之前恢复. 但理论上此时 r1+192也可以恢复r1.
    100008fc:	10 00 01 e8 	ld      r0,16(r1) 		#恢复r0
    10000900:	a6 03 08 7c 	mtlr    r0 			#r0 恢复 lr
    10000904:	f8 ff e1 eb 	ld      r31,-8(r1) 		#恢复r31
    10000908:	20 00 80 4e 	blr 				#返回到caller.
    1000090c:	00 00 00 00 	.long 0x0
    10000910:	00 00 00 01 	.long 0x1000000
    10000914:	80 01 00 01 	.long 0x1000180
    10000918:	00 00 00 60 	nop
    1000091c:	00 00 00 60 	nop

0000000010000920 <__libc_csu_init>:
    10000920:	02 10 40 3c 	lis     r2,4098
    10000924:	00 7f 42 38 	addi    r2,r2,32512
    10000928:	a6 02 08 7c 	mflr    r0
    1000092c:	d0 ff 41 fb 	std     r26,-48(r1)
    10000930:	d8 ff 61 fb 	std     r27,-40(r1)
    10000934:	e0 ff 81 fb 	std     r28,-32(r1)
    10000938:	e8 ff a1 fb 	std     r29,-24(r1)
    1000093c:	f0 ff c1 fb 	std     r30,-16(r1)
    10000940:	f8 ff e1 fb 	std     r31,-8(r1)
    10000944:	10 00 01 f8 	std     r0,16(r1)
    10000948:	b1 ff 21 f8 	stdu    r1,-80(r1)
    1000094c:	00 00 e0 3b 	li      r31,0
    10000950:	ff ff c2 3f 	addis   r30,r2,-1
    10000954:	ff ff a2 3f 	addis   r29,r2,-1
    10000958:	f8 7d de 3b 	addi    r30,r30,32248
    1000095c:	00 7e bd 3b 	addi    r29,r29,32256
    10000960:	50 e8 be 7f 	subf    r29,r30,r29
    10000964:	78 1b 7a 7c 	mr      r26,r3
    10000968:	78 23 9b 7c 	mr      r27,r4
    1000096c:	78 2b bc 7c 	mr      r28,r5
    10000970:	89 fa ff 4b 	bl      100003f8 <_init+0x8>
    10000974:	00 00 00 60 	nop
    10000978:	75 1e bd 7f 	sradi.  r29,r29,3
    1000097c:	f8 ff de 3b 	addi    r30,r30,-8
    10000980:	40 00 82 41 	beq     100009c0 <__libc_csu_init+0xa0>
    10000984:	00 00 00 60 	nop
    10000988:	00 00 00 60 	nop
    1000098c:	00 00 42 60 	ori     r2,r2,0
    10000990:	09 00 3e e9 	ldu     r9,8(r30)
    10000994:	78 d3 43 7f 	mr      r3,r26
    10000998:	18 00 41 f8 	std     r2,24(r1)
    1000099c:	78 db 64 7f 	mr      r4,r27
    100009a0:	78 e3 85 7f 	mr      r5,r28
    100009a4:	01 00 ff 3b 	addi    r31,r31,1
    100009a8:	a6 03 29 7d 	mtctr   r9
    100009ac:	78 4b 2c 7d 	mr      r12,r9
    100009b0:	21 04 80 4e 	bctrl
    100009b4:	18 00 41 e8 	ld      r2,24(r1)
    100009b8:	40 e8 bf 7f 	cmpld   cr7,r31,r29
    100009bc:	d4 ff 9e 40 	bne     cr7,10000990 <__libc_csu_init+0x70>
    100009c0:	50 00 21 38 	addi    r1,r1,80
    100009c4:	10 00 01 e8 	ld      r0,16(r1)
    100009c8:	d0 ff 41 eb 	ld      r26,-48(r1)
    100009cc:	d8 ff 61 eb 	ld      r27,-40(r1)
    100009d0:	e0 ff 81 eb 	ld      r28,-32(r1)
    100009d4:	e8 ff a1 eb 	ld      r29,-24(r1)
    100009d8:	f0 ff c1 eb 	ld      r30,-16(r1)
    100009dc:	f8 ff e1 eb 	ld      r31,-8(r1)
    100009e0:	a6 03 08 7c 	mtlr    r0
    100009e4:	20 00 80 4e 	blr
    100009e8:	00 00 00 00 	.long 0x0
    100009ec:	00 00 00 01 	.long 0x1000000
    100009f0:	80 06 00 00 	.long 0x680
    100009f4:	00 00 00 60 	nop
    100009f8:	00 00 00 60 	nop
    100009fc:	00 00 42 60 	ori     r2,r2,0

0000000010000a00 <__libc_csu_fini>:
    10000a00:	20 00 80 4e 	blr
	...
    10000a10:	e0 f5 01 00 	.long 0x1f5e0
    10000a14:	00 00 00 00 	.long 0x0

0000000010000a18 <__glink_PLTresolve>:
    10000a18:	a6 02 08 7c 	mflr    r0
    10000a1c:	05 00 9f 42 	bcl     20,4*cr7+so,10000a20 <__glink_PLTresolve+0x8>
    10000a20:	a6 02 68 7d 	mflr    r11
    10000a24:	f0 ff 4b e8 	ld      r2,-16(r11)
    10000a28:	a6 03 08 7c 	mtlr    r0
    10000a2c:	50 60 8b 7d 	subf    r12,r11,r12
    10000a30:	14 5a 62 7d 	add     r11,r2,r11
    10000a34:	d0 ff 0c 38 	addi    r0,r12,-48
    10000a38:	00 00 8b e9 	ld      r12,0(r11)
    10000a3c:	82 f0 00 78 	rldicl  r0,r0,62,2
    10000a40:	a6 03 89 7d 	mtctr   r12
    10000a44:	08 00 6b e9 	ld      r11,8(r11)
    10000a48:	20 04 80 4e 	bctr
    10000a4c:	00 00 00 60 	nop

0000000010000a50 <__libc_start_main@plt>:
    10000a50:	c8 ff ff 4b 	b       10000a18 <__glink_PLTresolve>

0000000010000a54 <random@plt>:
    10000a54:	c4 ff ff 4b 	b       10000a18 <__glink_PLTresolve>

0000000010000a58 <__gmon_start__@plt>:
    10000a58:	c0 ff ff 4b 	b       10000a18 <__glink_PLTresolve>

Disassembly of section .fini:

0000000010000a5c <_fini>:
    10000a5c:	02 10 40 3c 	lis     r2,4098
    10000a60:	00 7f 42 38 	addi    r2,r2,32512
    10000a64:	a6 02 08 7c 	mflr    r0
    10000a68:	10 00 01 f8 	std     r0,16(r1)
    10000a6c:	a1 ff 21 f8 	stdu    r1,-96(r1)
    10000a70:	60 00 21 38 	addi    r1,r1,96
    10000a74:	10 00 01 e8 	ld      r0,16(r1)
    10000a78:	a6 03 08 7c 	mtlr    r0
    10000a7c:	20 00 80 4e 	blr
